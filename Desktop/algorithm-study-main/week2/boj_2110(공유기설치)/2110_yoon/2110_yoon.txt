<처음 접근 방식> *조합 라이브러리 이용 

1. 입력한 집의 좌표를 정렬

2. C개를 선택할 수 있는 경우에서 가장 인접한 값(min)을 gap_list에 계속 추가

3. 그 중 최댓값 출력

 

<이분 탐색 아이디어>

1. 예제의 mid = 4, 공유기를 설치할 수 있는 곳은 마지막으로 설치한 곳과 설치예정 장소의 거리가 mid보다 커야함

2. 시작점에는 무조건 설치

    1~2  1 (x)

    1~4  3 (x)

    1~8  7 (o)

    8~9  1 (x)

    => C=2에 어긋 

 

<공유기 설치 위치의 조건>

1. 중간값보다 커야 설치 가능 => 이 때 중간값은 최소 거리와 최대 거리의 중앙을 의미!!

2. 다 설치를 했는데 C보다 작으면 공유기 간격 좁히기

3. 공유기 개수가 C보다 크면 공유기 간격 넓히기 

 

ex)

[1, 2, 4, 8, 9] 

start = 1, end = 8, cnt = 1, cur = 현재 집의 위치 = Houses[0]

 

mid = 4,

2-1 < 4 이므로 두 번째 집 공유기 설치x => cnt=1

4-1 < 4 이므로 세 번째 집 공유기 설치x => cnt=1

8-1 >= 4 이므로 네 번째 집 공유기 설치o => cnt=2

설치해야 하는 공유기 개수 3보다 작으므로 end를 mid-1로 설정하여 공유기 간격을 감소

 

mid = (1+3)//2 = 2,

2-1 < 2 이므로 두 번째 집 공유기 설치x => cnt=1

4-1 >= 2 이므로 세 번째 집 공유기 설치o => cnt=2

... 4번째 집o 5 번째 집 공유기 설치o => cnt=4

 

 