문제 – 환승 – 일단 최단거리, 최소한의 개수 이런게 나오면 bfs를 쓰는 것이 적절한 것 같다. 
Bfs가 알아서 최소거리를 구하기 때문이다. 일단 bfs의 기본적인 형태의 코드를 아는 것이 중요함 (while문 -> pop -> for문 -> pop한 노드를 방문하지 않았다면 
방문처리하고 -> 해당 노드를 dq에 append) 이것이 가장 기본 형태다 모든 bfs가 문제가 여기서 조금씩 변형된 것! 
이 문제를 처음 봤을 때 일단 입력부터 어떻게 받아야할지 감이 안잡혔다. 
그래서 생각한건 각각의 모든 역에 대해 갈 수 있는 모든 역을 append해서 map을 만들까 생각을 해봤는데 
이건 진짜 너무 복잡하고 메모리문제가 발생할 것이라고 생각했다. 
그래서 각각의 역에 대해 환승할 수 있는 하이퍼튜브 배열, 
그리고 각각 하이퍼튜브 별로 갈 수 있는 역을 알 수 있는 배열, 이렇게 총 두개의 큰 배열을 만들면 역 -> 하이퍼튜브 -> 역 
이런 느낌으로 환승의 문제에 알맞은 풀이 방식이 될 것이라고 생각 그
래서 이 생각 그대로 bfs문에서도 역 -> 하이퍼튜브로 가는 for문 하나, 하이퍼튜브 -> 역으로 가는 for문 하나 총 두개의 큰 for문을 만들어 접근했다. 
또한 visited배열도 역 방문을 확인하는 visited배열, 
하이퍼튜브 방문을 확인하는 visited배열 총 두개의 배열을 따로 만들었다.